/******************************************************
* PLEASE DO NOT EDIT THIS FILE
* the verification process may break
* ***************************************************/
// first commit
'use strict';

let fs = require('fs');
let express = require('express');
let app = express();

if (!process.env.DISABLE_XORIGIN) {
  app.use(function(req, res, next) {
    let allowedOrigins = ['https://narrow-plane.gomix.me', 'https://www.freecodecamp.com'];
    let origin = req.headers.origin || '*';
    if (!process.env.XORIG_RESTRICT || allowedOrigins.indexOf(origin) > -1) {
      console.log(origin);
      res.setHeader('Access-Control-Allow-Origin', origin);
      res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
    }
    next();
  });
}

// is this working

app.use('/public', express.static(process.cwd() + '/public'));

app.route('/_api/package.json')
  .get(function(req, res, next) {
    console.log('requested');
    fs.readFile(__dirname + '/package.json', function(err, data) {
      if (err) return next(err);
      res.type('txt').send(data.toString());
    });
  });


app.route('/*')
  .get(function(req, res) {
    if (req.path == '/') {
      res.sendFile(process.cwd() + '/views/index.html');
    } else {
      let path = req.path;
      if (path.charAt(0) == '/')
        path = path.substr(1);
      console.log("path", path);
      res.send(getReturnObject(decodeURI(path)));
    }
  });

app.route('/')
  .get(function(req, res) {

    console.log(req.path)


    if (req.path == '/') {
      res.sendFile(process.cwd() + '/views/index.html');
    } else {
      res.send({
        name: "hello world"
      });
    }
  })

// Respond not found to all the wrong routes
app.use(function(req, res, next) {
  res.status(404);
  res.type('txt').send('Not found');
});

// Error Middleware
app.use(function(err, req, res, next) {
  if (err) {
    res.status(err.status || 500)
      .type('txt')
      .send(err.message || 'SERVER ERROR');
  }
})

// reload(app);
app.listen(process.env.PORT || 5000, function() {
  console.log('Node.js listening ...');
});

